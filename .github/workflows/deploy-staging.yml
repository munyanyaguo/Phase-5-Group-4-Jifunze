name: Deploy to Staging

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  deploy-staging-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: client/package-lock.json
          
      - name: Install and build
        working-directory: client
        run: |
          npm ci
          npm run build
        env:
          VITE_API_URL: ${{ secrets.STAGING_API_URL || 'https://jifunze-staging-api.onrender.com' }}
          
      - name: Build verification
        working-directory: client
        run: |
          echo "‚úÖ Staging build completed successfully"
          ls -la dist/
          test -f dist/index.html
          echo "Build size: $(du -sh dist/ | cut -f1)"
          
      - name: Deploy frontend to Render (Staging)
        if: github.event_name == 'push'
        env:
          DEPLOY_HOOK: ${{ secrets.RENDER_STAGING_FRONTEND_DEPLOY_HOOK }}
        run: |
          if [ -n "$DEPLOY_HOOK" ]; then
            curl -X POST "$DEPLOY_HOOK"
            echo "‚úÖ Staging frontend deployment triggered"
          else
            echo "‚ö†Ô∏è  RENDER_STAGING_FRONTEND_DEPLOY_HOOK not configured"
            echo "Staging deployment will be manual until secrets are set"
          fi

  deploy-staging-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
          
      - name: Verify backend files
        working-directory: server
        run: |
          echo "‚úÖ Backend files verified for staging"
          ls -la
          
      - name: Deploy backend to Render (Staging)
        if: github.event_name == 'push'
        env:
          DEPLOY_HOOK: ${{ secrets.RENDER_STAGING_BACKEND_DEPLOY_HOOK }}
        run: |
          if [ -n "$DEPLOY_HOOK" ]; then
            curl -X POST "$DEPLOY_HOOK"
            echo "‚úÖ Staging backend deployment triggered"
          else
            echo "‚ö†Ô∏è  RENDER_STAGING_BACKEND_DEPLOY_HOOK not configured"
            echo "Staging deployment will be manual until secrets are set"
          fi

  test-staging-deployment:
    runs-on: ubuntu-latest
    needs: [deploy-staging-frontend, deploy-staging-backend]
    if: always()
    steps:
      - name: Staging deployment status
        env:
          FRONTEND_URL: ${{ secrets.STAGING_FRONTEND_URL || 'https://jifunze-staging.onrender.com' }}
          BACKEND_URL: ${{ secrets.STAGING_API_URL || 'https://jifunze-staging-api.onrender.com' }}
        run: |
          echo "üöÄ Staging deployment pipeline completed"
          echo "üìã Staging Environment:"
          echo "   Frontend: $FRONTEND_URL"
          echo "   Backend: $BACKEND_URL"
          echo ""
          echo "üí° Next steps:"
          echo "1. Verify staging deployment at the URLs above"
          echo "2. Test Attendance and Chat features"
          echo "3. If tests pass, merge to main for production deployment"
